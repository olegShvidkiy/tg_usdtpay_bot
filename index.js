const fs = require("fs");
const TelegramApi = require("node-telegram-bot-api");
const db = require("./src/db/db");
require('dotenv').config()
const token = process.env.TG_API;
const bot = new TelegramApi(token, {polling: true});

bot.commands = new Map();
const commands = fs.readdirSync("./src/commands").filter(file=>file.endsWith(".js"));

commands.forEach( file => {
    const commandName = file.substr(0, file.indexOf("."));
    const command = require(`./src/commands/${commandName}`);
    bot.commands.set(commandName, command);
});

bot.setMyCommands([
    {command: "/start", description: "Start message"},
])

const buttons = {
    reply_markup: JSON.stringify({
        keyboard:[
            ["üíµ –ù–∞—á–∞—Ç—å –æ–ø–ª–∞—Ç—É", "üìú –ò–Ω—Ñ–æ"],
            ["‚ùóÔ∏è –í–ê–ñ–ù–û! –ü–†–û–ß–¢–ò–¢–ï –ü–ï–†–ï–î –û–ü–õ–ê–¢–û–ô ‚ùóÔ∏è"]
        ],
        resize_keyboard: true,
    }),
    parse_mode: "Markdown"
}

const helloMessage = `üëãüèª  –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–∞–Ω–¥–∞ [001k.trading](https://www.instagram.com/001k.trading/?igshid=YmMyMTA2M2Y%3D)\n\nüìå –° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–µ—Å—è—á–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ [001k.process](https://www.instagram.com/001k.trading/?igshid=YmMyMTA2M2Y%3D). –¶–µ–Ω–∞ –º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 19$ + –∫–æ–º–∏—Å—Å–∏—è —Å–µ—Ç–∏ TRC-20.\n–ü–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µüëáüèª.`
const guideText =  `1Ô∏è‚É£ –ü–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã - –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ <b>USDT</b>(c–µ—Ç—å <b>TRC-20</b>) –∏ —Ç–æ—á–Ω—É—é <b>—Å—É–º–º—É</b> –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–ª–∞—Ç–µ–∂ –±—ã–ª –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω\n\n2Ô∏è‚É£ <b>–í–ê–ñ–ù–û! –ù–ï –û–ö–†–£–ì–õ–Ø–ô–¢–ï –°–£–ú–ú–£!</b> –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–Ω–æ —Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–∞(–∏ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ –∫–æ–º–∏—Å—Å–∏–∏). –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ - <b>19$</b> + –∫–æ–º–º–∏—Å–∏—è(–µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å binance 0.8$) + —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—É–º–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏(–æ–Ω–∞ –±—É–¥–µ—Ç —É—á—Ç–µ–Ω–∞ –≤ —Å—É–º–º–µ, –∫–æ–≥–¥–∞ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ –æ–ø–ª–∞—Ç—É), –Ω–∞–ø—Ä–∏–º–µ—Ä 0.001234 = <b>19.801234</b>(—Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ)\n\n3Ô∏è‚É£ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω, –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—Å—è –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É <b>"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"</b>\n\n4Ô∏è‚É£ –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª.\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –æ–ø–ª–∞—Ç–æ–π, –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É - @help_process`

const infoText = `‚ÅâÔ∏è–ß—Ç–æ —Ç–∞–∫–æ–µ 001k.process:\n\n\t ‚Ä¢ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –±—Ä–∏—Ñ–∏–Ω–≥–∏ –Ω–∞ —Ä—ã–Ω–∫–µ –∫—Ä–∏–ø—Ç—ã;\n\t ‚Ä¢ –±—Ä–∏—Ñ–∏–Ω–≥–∏ –Ω–∞ —Ñ–æ–Ω–¥–æ–≤–æ–º —Ä—ã–Ω–∫–µ;\n\t ‚Ä¢ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ –¥–Ω—è;\n\t ‚Ä¢ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ –º–æ–Ω–µ—Ç–µ:\n\t ‚Ä¢ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫—Ä—É–ø–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ —Å—Ç–∞–∫–∞–Ω–µ;\n\t ‚Ä¢ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:\n\t ‚Ä¢ –∑–∞–ø—É—Å–∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª–µ–∑–Ω—ã—Ö –±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞;\n\t ‚Ä¢ —á–∞—Ç —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≥—Ä—É–ø–ø—ã:`;
const lastTime = {};
//`1Ô∏è‚É£ –ü–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã - –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ *USDT*(c–µ—Ç—å *TRC20*) –∏ —Ç–æ—á–Ω—É—é *—Å—É–º–º—É* –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–ª–∞—Ç–µ–∂ –±—ã–ª –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω\n\n2Ô∏è‚É£ *–í–ê–ñ–ù–û! –ù–ï –û–ö–†–£–ì–õ–Ø–ô–¢–ï –°–£–ú–ú–£!* –í–≤–æ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ —Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ - *19$* + –∫–æ–º–º–∏—Å–∏—è(–µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å binance 0.8$) + —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—É–º–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä 0.001234 = 19.801234(—Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ)\n\n3Ô∏è‚É£ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω, –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—Å—è –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂\n\n4Ô∏è‚É£ –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª.\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –æ–ø–ª–∞—Ç–æ–π, –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É - @help_process`

const prefix = "/";
bot.on( "message", async message => {
    if(message.text === "/start"){
        bot.sendMessage(message.chat.id, helloMessage, buttons);
    }
    let command;
    if(message.text.startsWith(prefix)){
        const args = message.text.slice(prefix.length).trim().split(/ +/g);
        const commandName = args.shift();
        command = bot.commands.get(commandName);
        if(!command) return;

        command.run(bot, message, args);
    }

    switch(message.text){
        case "üíµ –ù–∞—á–∞—Ç—å –æ–ø–ª–∞—Ç—É": 
            command = bot.commands.get("startPay");
            if(!command && checkCooldown(message, command.cooldown)) return;
            await command.run(bot, message, []);
        break;

        case "‚ùóÔ∏è –í–ê–ñ–ù–û! –ü–†–û–ß–¢–ò–¢–ï –ü–ï–†–ï–î –û–ü–õ–ê–¢–û–ô ‚ùóÔ∏è":
            bot.sendMessage(message.chat.id, guideText, {parse_mode: "HTML"});
        break;

        case "üìú –ò–Ω—Ñ–æ":
            bot.sendMessage(message.chat.id, infoText);
        break;

        case "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É":
            command = bot.commands.get("stopPayment");
            if(!command && checkCooldown(message, command.cooldown)) return;
            await command.run(bot, message, []);
        break;

        case "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂":
            command = bot.commands.get("checkPayment");
            if(!command) return;
            if(!checkCooldown(message, command.cooldown)) return
            // console.log(checkCooldown(message, command.cooldown))
            await command.run(bot, message, []);
        break;        
    }

})

function checkCooldown(message, cooldown){
    const last = lastTime[message.chat.id]
    if(last && last >= Date.now() - cooldown) return false;
    lastTime[message.chat.id] = Date.now();
    return true;
}

bot.on("callback_query", async msg =>{
    
    const command = bot.commands.get(msg.data);
    
    if(!command) return;
    const last = lastTime[msg.message.chat.id]
    if(last && last >= Date.now() - command.cooldown) return;
    lastTime[msg.message.chat.id] = Date.now();

    await command.run(bot, msg.message, []);
})




