const Users = require("../db/models/user");
const Payment = require("../db/models/payment");
const {getChannelInviteLink} = require("../utils/utils.js");
const channelChatId = process.env.TG_CHAT_ID;
const buttons = {
    reply_markup: JSON.stringify({
        keyboard:[
            ["üíµ –ù–∞—á–∞—Ç—å –æ–ø–ª–∞—Ç—É", "üìú –ò–Ω—Ñ–æ"],
            ["‚ùóÔ∏è –í–ê–ñ–ù–û! –ü–†–û–ß–¢–ò–¢–ï –ü–ï–†–ï–î –û–ü–õ–ê–¢–û–ô ‚ùóÔ∏è"]
        ],
        resize_keyboard: true
    }),
    parse_mode: "Markdown"
};
module.exports = {
    name: "addUser",
    adminCommand: true,
    run: async (bot, message, args )=>{
        const chatId = message.chat.id;
        let payment, user;
        try{
            const tg_username = args[0];
            user = await Users.find({tg_username: tg_username});
            payment = await Payment.find({tg_username: tg_username}).exec()
            
            if(user.length) {
                bot.sendMessage(chatId, "–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!");
                return;
            }

            if(!payment.length){
                bot.sendMessage(chatId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!");
                return;
            }

            const tg_id = payment[0].tg_id;
            const tx_id = args[1];
            const date = new Date(); 
            const expire_date = new Date(date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours()).getTime();
            console.log(tg_id, tg_username, args)
            const newUser = new Users({tg_id, tx_id, tg_username, expire_date}); 
            await newUser.save();
            await Payment.deleteOne({tg_id}).exec();
            const link = await getChannelInviteLink(bot, channelChatId);
            bot.sendMessage(chatId, `–£—Å–ø–µ—à–Ω–æ! –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`);
            bot.sendMessage(tg_id, `–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–π! –í–∞—à–∞ —Å—Å—ã–ª–∫–∞(–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 30-—Ç–∏ –º–∏–Ω—É—Ç): ${link}`, buttons);
        }catch(err){console.log(err);}

    }
}