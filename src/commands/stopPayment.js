const Payments = require("../db/models/payment");
const Users = require("../db/models/user");
const buttons = {
    reply_markup: JSON.stringify({
        inline_keyboard:[
            [{text: "üíµ –ù–∞—á–∞—Ç—å –æ–ø–ª–∞—Ç—É —Å–Ω–∞—á–∞–ª–∞", callback_data: "startPay"}]
        ],
        keyboard:[
            ["üíµ –ù–∞—á–∞—Ç—å –æ–ø–ª–∞—Ç—É", "üìú –ò–Ω—Ñ–æ"],
            ["‚ùóÔ∏è –í–ê–ñ–ù–û! –ü–†–û–ß–¢–ò–¢–ï –ü–ï–†–ï–î –û–ü–õ–ê–¢–û–ô ‚ùóÔ∏è"]
        ],
        resize_keyboard: true
    }),
    parse_mode: "Markdown"
};
module.exports = {
    name: "stopPayment",
    cooldown: 5000,
    run: async (bot, message, args )=>{
        const chatId = message.chat.id;
        try{
            user = await Users.find({tg_id: chatId});
            if(user.length) {
                bot.sendMessage(chatId, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!");
                return;
            }
            Payments.deleteOne({ tg_id: chatId }).exec().then((res)=>{
                if(!res.deletedCount) return;
                bot.sendMessage(chatId, "–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞!", buttons)
            });
        }catch(err){
            bot.sendMessage(chatId, "–û—à–∏–±–∫–∞!")
        }
    }
}